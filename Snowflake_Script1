#Displaying values from the stage
select * from @otodom_stage;

#Displaying values from the table, created inside the stage
select * from otodom_data;

#To remove the "" from each column
select replace(json_data:price, '"') 
from otodom_data;

CREATE OR REPLACE table otodom_data_flatten
as
select row_number() over(order by title) as rn
, x.*
from (
select replace(json_data:advertiser_type,'"')::string as advertiser_type
, replace(json_data:balcony_garden_terrace,'"')::string as balcony_garden_terrace
, regexp_replace(replace(json_data:description,'"'), '<[^>]+>')::string as description
, replace(json_data:heating,'"')::string as heating
, replace(json_data:is_for_sale,'"')::string as is_for_sale
, replace(json_data:lighting,'"')::string as lighting
, replace(json_data:location,'"')::string as location
, replace(json_data:price,'"')::string as price
, replace(json_data:remote_support,'"')::string as remote_support
, replace(json_data:rent_sale,'"')::string as rent_sale
, replace(json_data:surface,'"')::string as surface
, replace(json_data:timestamp,'"')::date as timestamp
, replace(json_data:title,'"')::string as title
, replace(json_data:url,'"')::string as url
, replace(json_data:form_of_property,'"')::string as form_of_property
, replace(json_data:no_of_rooms,'"')::string as no_of_rooms
, replace(json_data:parking_space,'"')::string as parking_space
from otodom_data
) x;

select * from otodom_data_flatten;

SELECT RN, 
                SUBSTR (location, REGEXP_INSTR(location, ' ', 1, 4) + 1) AS LATITUDE,
                SUBSTR (location, REGEXP_INSTR(location, ' ', 1, 1) + 1, (REGEXP_INSTR(location, ' ', 1, 2) - REGEXP_INSTR(location, ' ', 1, 1) - 1 )) AS LONGITUDE
                FROM otodom_data_flatten WHERE RN BETWEEN 1 and 1000 AND REMOTE_SUPPORT = 'No'
                ORDER BY RN;

select * from otodom_data_flatten_address;

--Load CSV-- 
CREATE TABLE otodom_data_flatten_address_full
(
    rn int,
    location text,
    address text
);

-- To load a table into Snowflake we have to create a stage, define a file format then first --
CREATE OR REPLACE file format csv_format 
type = csv 
field_delimiter = ','
field_optionally_enclosed_by='"';

CREATE OR REPLACE stage my_csv_stage
file_format = csv_format;

-- Move data from file to stage, use put --
PUT file://D:/Otodom_Apartment_major_cities_dataset_Address.csv @my_csv_stage;

COPY INTO otodom_data_flatten_address_full from @my_csv_stage;

SELECT * from otodom_data_flatten_address_full;

--Load CSV-- 
CREATE TABLE otodom_data_flatten_translate_full
(
    rn int,
    title text,
    title_eng text
);

CREATE OR REPLACE file format csv_format_trans 
type = csv 
field_delimiter = ','
field_optionally_enclosed_by='"';

CREATE OR REPLACE stage my_csv_stage_trans
file_format = csv_format_trans;

-- Move data from file to stage, use put -- in cmd
PUT file://D:/Otodom_Apartment_major_cities_dataset_Translate.csv @my_csv_stage_trans;

COPY INTO otodom_data_flatten_translate_full from @my_csv_stage_trans;

SELECT * from otodom_data_flatten_translate_full;